---
import type { HTMLAttributes } from 'astro/types'

interface Base {
    /**
     * @extend <a | button>
     * @prop type : 'link' | 'button'
     * @prop slot
     */
    props? : true
}

interface Link extends HTMLAttributes<'a'>, Base {
    type : 'link',
    href : string
}

interface Button extends HTMLAttributes<'button'>, Base {
    type? : 'button',
    href? : never
}

type Props = Link | Button



const {
    type = 'button',
    ...rest
} = Astro.props

---

{ type === 'button' && 
    <button {...rest}>
        <slot />
    </button>
}

{type === 'link' &&
    <a {...rest}>
        <slot />
    </a>
}



<style>

a, button {
    display : inline-flex !important;
    align-items: center !important;
    gap : 0.25rem !important;
    padding : 0.75rem 1.25rem !important;
    font-weight: 600 !important;
    letter-spacing: 0.05rem !important;
}

.btn-default {
    background-color: var(--button-bg-color);
    color : var(--button-text-color);
}

.btn-default:hover, .btn-default:focus {
    background-color: var(--button-bg-color-hover);
    color : var(--button-text-color-hover);
}

</style>